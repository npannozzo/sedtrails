@startuml SedtrailContainer
!include ./c4/C4_Container.puml

title sedTRAILS Container Diagram
scale 1.5
' LAYOUT_LANDSCAPE()

Person(modeler, "Modeler", "Tracks sand particles in a coastal system")
Person(analyst, "Analyst", "Processes and visualizes simulation outputs")

System_Boundary(sedtrailsSystem, "SedTRAILS Particle Tracking System"){ 
    Container(sedtrailsTracer, "Lagrangian Particle Tracer", "Python", "A parallel processing application that computes the current and future position of sand particles (x,y,t) in a coastal system")
    Container(configInterface, "Simulation Configuration Interface", "Python", "An application that reads and interprets simulation configuration files")
    Container(sedtrailsLogger, "SedTRAILS  Logger", "Python", "An application that logs simulation states, outputs, errors and computational performance metrics")
    Container(transportConverter, "Transport Converter", "Python", "An application that provides custom interfaces and methods for reading and converting 'transport flow-field data' to SedTRAILS compatible formats and physical units.")
    Container(pathwayVisualizer, "Pathway Visualizer", "Python", "An application to generate plots and animations of sand particle pathways.")
    Container(cache, "Simulation Cache and Recovery", "Python", "Provides functionality to recover simulation output, allow restarts, and reusing simulation inputs and outputs")
    Container(dataManager, "Data Management Module", "Python", "An application that manages data and files produced by the SedTRAILS Particle Tracer System")
    Container(analystApp, "Simulation Analysis Application", "Python", "An application to post-process simulation outputs and conduct statistical and connectivity network analyses")

    Rel(sedtrailsLogger, transportConverter, "access start/end processing times for", "Python object")
    Rel(cache, sedtrailsLogger, "retrieves simulation states from", "Python object")
    Rel(sedtrailsLogger, sedtrailsTracer, "access start/end processing times for", "Python object")
    Rel(transportConverter, sedtrailsTracer, "provides converted flow-field data to", "Python object")
    Rel(sedtrailsLogger, sedtrailsTracer, "logs simulation states and outputs", "Python object")
    Rel(cache, sedtrailsTracer, "provides cached flow-field data", "Python object")
    Rel(cache, transportConverter, "access state of converted transport field-data in", "Python object")
    Rel(configInterface, transportConverter, "provides configuration for physics conversions to", "Python object")
    Rel(configInterface, sedtrailsTracer, "provides configuration for", "Python object")
    Rel(sedtrailsTracer, dataManager, "provides output pathways data to", "Python object")
    Rel(transportConverter, dataManager, "provides converted flow-field data to", "Python object") 
    Rel(cache, dataManager, "provides simulation states, and retrieves cached data via", "Any") 
    Rel(dataManager, pathwayVisualizer, "provides particle pathway data to", "NETCDF, Python")
}
System_Ext(flowSystem, "Eulerian Flow Modeling System", "Simulates flows of water and wind", $type="Any")

SystemDb_Ext(fileSystem, "Local File System", "OS file system", $type="Windows, Linux, MacOS")

Rel(dataManager, fileSystem, "read/writes files to", "NETCDF")
Rel(modeler, configInterface, "defines simulation configurations and outputs for", "YAML, Configuration file, Terminal")

Rel(analyst, pathwayVisualizer, "creates visualizations of sand pathways using", "Python")
Rel(analyst, analystApp, "processes simulation outputs in", "Terminal")
Rel(analystApp, fileSystem, "reads simulation outputs and writes analysis results", "Any")

Rel(sedtrailsLogger, fileSystem, "writes log files to", "Plain text")

Rel(modeler, flowSystem, "produces flow-field data using", "Any")
Rel(transportConverter, flowSystem, "reads flow-field data from", "Python")

SHOW_LEGEND()
@enduml
